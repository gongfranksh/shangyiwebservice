DEBUG:spyne.model.complex:Got bases for Person from meta: (<class 'spyne.model.complex.ComplexModel'>,)
DEBUG:spyne.model.complex:Got bases for Iterable from orig: (<class 'spyne.model.complex.Array'>,)
DEBUG:spyne.model.complex:Got bases for Array from orig: (<class 'spyne.model.complex.ComplexModelBase'>,)
DEBUG:spyne.model.complex:Got bases for Person from orig: (<class 'spyne.model.complex.ComplexModel'>,)
DEBUG:spyne.model.complex:Got bases for Iterable from orig: (<class 'spyne.model.complex.Array'>,)
DEBUG:spyne.model.complex:Got bases for say_hello_1 from meta: (<class 'spyne.model.complex.ComplexModel'>,)
DEBUG:spyne.model.complex:Got bases for say_hello_1Response from meta: (<class 'spyne.model.complex.ComplexModel'>,)
DEBUG:spyne.model.complex:Got bases for say_hello from meta: (<class 'spyne.model.complex.ComplexModel'>,)
DEBUG:spyne.model.complex:Got bases for say_helloResponse from meta: (<class 'spyne.model.complex.ComplexModel'>,)
DEBUG:spyne.model.complex:Got bases for Array from orig: (<class 'spyne.model.complex.ComplexModelBase'>,)
DEBUG:spyne.model.complex:Got bases for Iterable from orig: (<class 'spyne.model.complex.Array'>,)
DEBUG:spyne.model.complex:Got bases for say_hello_2 from meta: (<class 'spyne.model.complex.ComplexModel'>,)
DEBUG:spyne.model.complex:Got bases for say_hello_2Response from meta: (<class 'spyne.model.complex.ComplexModel'>,)
DEBUG:spyne.interface._base:populating '__main__.HelloWorldService ({spyne.examples.hello}HelloWorldService)' types...
DEBUG:spyne.interface._base:  enumerating classes for method 'say_hello_1'
DEBUG:spyne.interface._base:    adding class "<class 'spyne.model.complex.say_hello_1'>" for '{spyne.examples.hello}say_hello_1'
DEBUG:spyne.interface._base:    adding say_hello_1.persons = <class 'spyne.model.complex.Array'>
DEBUG:spyne.interface._base:    adding class "<class 'spyne.model.complex.Array'>" for '{spyne.examples.hello}PersonArray'
DEBUG:spyne.interface._base:    adding PersonArray.Person = <class '__main__.Person'>
DEBUG:spyne.interface._base:    adding class "<class '__main__.Person'>" for '{spyne.examples.hello}Person'
DEBUG:spyne.interface._base:    adding Person.name = <class 'spyne.model.primitive.string.Unicode'>
DEBUG:spyne.interface._base:    adding class "<class 'spyne.model.primitive.string.Unicode'>" for '{http://www.w3.org/2001/XMLSchema}string'
DEBUG:spyne.interface._base:    adding Person.age = <class 'spyne.model.primitive.number.Integer'>
DEBUG:spyne.interface._base:    adding class "<class 'spyne.model.primitive.number.Integer'>" for '{http://www.w3.org/2001/XMLSchema}integer'
DEBUG:spyne.interface._base:    adding class "<class 'spyne.model.complex.say_hello_1Response'>" for '{spyne.examples.hello}say_hello_1Response'
DEBUG:spyne.interface._base:    adding say_hello_1Response.say_hello_1Result = <class 'spyne.model.complex.Iterable'>
DEBUG:spyne.interface._base:    adding class "<class 'spyne.model.complex.Iterable'>" for '{spyne.examples.hello}stringArray'
DEBUG:spyne.interface._base:    adding stringArray.string = <class 'spyne.model.primitive.string.Unicode'>
DEBUG:spyne.interface._base:  enumerating classes for method 'say_hello'
DEBUG:spyne.interface._base:    adding class "<class 'spyne.model.complex.say_hello'>" for '{spyne.examples.hello}say_hello'
DEBUG:spyne.interface._base:    adding say_hello.name = <class 'spyne.model.primitive.string.Unicode'>
DEBUG:spyne.interface._base:    adding say_hello.times = <class 'spyne.model.primitive.number.Integer'>
DEBUG:spyne.interface._base:    adding class "<class 'spyne.model.complex.say_helloResponse'>" for '{spyne.examples.hello}say_helloResponse'
DEBUG:spyne.interface._base:    adding say_helloResponse.say_helloResult = <class 'spyne.model.complex.Iterable'>
DEBUG:spyne.interface._base:populating '__main__.HelloWorldService2 ({spyne.examples.hello}HelloWorldService2)' types...
DEBUG:spyne.interface._base:  enumerating classes for method 'say_hello_2'
DEBUG:spyne.interface._base:    adding class "<class 'spyne.model.complex.say_hello_2'>" for '{spyne.examples.hello}say_hello_2'
DEBUG:spyne.interface._base:    adding say_hello_2.persons = <class 'spyne.model.complex.Array'>
DEBUG:spyne.interface._base:    adding class "<class 'spyne.model.complex.say_hello_2Response'>" for '{spyne.examples.hello}say_hello_2Response'
DEBUG:spyne.interface._base:    adding say_hello_2Response.say_hello_2Result = <class 'spyne.model.complex.Iterable'>
DEBUG:spyne.interface._base:populating '__main__.HelloWorldService' routes...
DEBUG:spyne.interface._base:  adding method HelloWorldService.say_hello_1 to match '{spyne.examples.hello}say_hello_1' tag.
DEBUG:spyne.interface._base:  adding method HelloWorldService.say_hello to match '{spyne.examples.hello}say_hello' tag.
DEBUG:spyne.interface._base:populating '__main__.HelloWorldService2' routes...
DEBUG:spyne.interface._base:  adding method HelloWorldService2.say_hello_2 to match '{spyne.examples.hello}say_hello_2' tag.
DEBUG:spyne.interface._base:From this point on, you're not supposed to make any changes to the class and method structure of the exposed services.
DEBUG:spyne.interface.xml_schema:generating schema for targetNamespace='spyne.examples.hello', prefix: 'tns' in dir 'c:\\users\\weiliang\\appdata\\local\\temp\\spynedn1rva'
DEBUG:spyne.interface.xml_schema:writing 'c:\\users\\weiliang\\appdata\\local\\temp\\spynedn1rva\\tns.xsd' for ns spyne.examples.hello
DEBUG:spyne.interface.xml_schema:Schema built. Removed 'c:\\users\\weiliang\\appdata\\local\\temp\\spynedn1rva'
DEBUG:spyne.util.appreg:Registering <spyne.application.Application object at 0x000000000440E2E8> as ('spyne.examples.hello', 'Application')
INFO:root:listening to http://127.0.0.1:8000
INFO:root:wsdl is at: http://localhost:8000/?wsdl
DEBUG:spyne:gc.collect() took around 0ms.
DEBUG:spyne.protocol.soap.soap11:ValueError: Deserializing from unicode strings with encoding declaration is not supported by lxml.
DEBUG:spyne.protocol.xml:Validated ? True
DEBUG:spyne.protocol.soap.soap11:ValueError: Deserializing from unicode strings with encoding declaration is not supported by lxml.
DEBUG:spyne.protocol.xml:Validated ? True
DEBUG:spyne.protocol.soap.soap11:ValueError: Deserializing from unicode strings with encoding declaration is not supported by lxml.
DEBUG:spyne.protocol.xml:Validated ? True
DEBUG:spyne:gc.collect() took around 20ms.
DEBUG:spyne.protocol.soap.soap11:ValueError: Deserializing from unicode strings with encoding declaration is not supported by lxml.
DEBUG:spyne.protocol.xml:Validated ? True
DEBUG:spyne.protocol.soap.soap11:ValueError: Deserializing from unicode strings with encoding declaration is not supported by lxml.
DEBUG:spyne.protocol.xml:Validated ? True
DEBUG:spyne.protocol.soap.soap11:ValueError: Deserializing from unicode strings with encoding declaration is not supported by lxml.
DEBUG:spyne.protocol.xml:Validated ? True
